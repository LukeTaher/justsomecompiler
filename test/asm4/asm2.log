===== Failed legacy-test-empty =====

===== Input:
/*
	Tests an empty file
*/===== Expected:
Fatal error: exception Failure("Unable to match - Value main not found")

===== Output:

===== Error:


===== Failed legacy-test-error =====

===== Input:
/*
	Test error messages
*/

main(){
	5 +
}===== Expected:
Parse error: Unexpected token } found at position 36 

===== Output:

===== Error:


===== Failed legacy-test-integers =====

===== Input:
/*
	Tests integers
*/

main(){
	5
}

b(){
	5+5
}

c(){
	5-5
}

d(){
	5*5
}

e(){
	5/5
}===== Expected:
5

===== Output:

===== Error:


===== Failed legacy-test-return =====

===== Input:
/*
	Tests return
*/

main(){
	return 5
}

b(){
	var x = 5;
	var y = 10;
	return y >= 5
}===== Expected:
5

===== Output:

===== Error:


===== Failed legacy-test-sequences =====

===== Input:
/*
	Tests Sequences
*/

main(){
	5;
	5;
	5;
	5;
	5
}

b(){
	x = if(x == x){
		5
	}
	else{
		6
	};
	x
}===== Expected:
5

===== Output:

===== Error:


===== Failed test-assignment =====

===== Input:
/*
	Tests evaluation of assignment
*/
main(){
	var g = 100;
	~g
}
===== Expected:
100

===== Output:

===== Error:


===== Failed test-bools =====

===== Input:
/*
	Tests evaluation of bools
*/
main(){
	var a = 100;
	var b = 100;
	var c = 1;

	var abool = ~a == ~b;
	var bbool = ~b <= ~c;
	var cbool = ~c > ~a;

	if (~abool){
		if(!(~bbool)){
			if(!(~cbool)){
				1
			}
			else{
				0
			}
		}
		else{
			0
		}
	}
	else{
		0
	}
}
===== Expected:
1

===== Output:

===== Error:


===== Failed test-datatypes =====

===== Input:
/*
	Tests evaluation of types
*/
main(){
	var aint = 1;
	var bbool = 1 == 1;
	var ppointer = bbool;
	var cunit = if(~~ppointer){aint = 1}else{aint = 1};
	~cunit
}===== Expected:
()

===== Output:

===== Error:


===== Failed test-error =====

===== Input:
/*
	Tests evaluation error of assignment
*/
main(){
	var x = 5;
	7 = x
}
===== Expected:
Fatal error: exception Failure("Unable to match - Address out of bounds")

===== Output:

===== Error:


===== Failed test-fibonacci =====

===== Input:
/*
	Tests evaluation of fibonacci numbers
*/
main(){

	/* series values */
	var f = 0;
	var g = 1;

	/* iterator */
	var i = 0;

	while(~i < 12){
		var temp = ~f;
		f = ~f + ~g;
		g = ~temp;
		i = ~i + 1;
		~f
	}
}
===== Expected:
144

===== Output:

===== Error:


===== Failed test-if =====

===== Input:
/*
	Tests evaluation of if
*/
main(){
	var a = 100;
	var b = 100;
	var c = 1;

	var abool = ~a == ~b;
	var bbool = ~b <= ~c;
	var cbool = ~c > ~a;

	var x = if (~abool){
		if(!(~bbool)){
			if(!(~cbool)){
				1
			}
			else{
				0
			}
		}
		else{
			0
		}
	}
	else{
		0
	};

	if(~x == 1){x}else{a} = 99;
	~x
}
===== Expected:
99

===== Output:

===== Error:


===== Failed test-op-precedence =====

===== Input:
/*
	Tests evaluation of operation chaining and precedence
*/
main(){
	var i = 1 + 2 * 6 / (1 * 2) - 1;
	~i
}
===== Expected:
6

===== Output:

===== Error:


===== Failed test-pointers =====

===== Input:
main(){
	var x = 7;
	var y = x;
	var z = y;
	~~~z
}===== Expected:
7

===== Output:

===== Error:


===== Failed test-undefined-var =====

===== Input:
/*
	Tests evaluation error of undefined variable
*/
main(){
	x
}
===== Expected:
Fatal error: exception Failure("Unable to match - Value x not found")

===== Output:

===== Error:


===== Failed test-uniformity =====

===== Input:
/*
	Tests evaluation of uniform syntax
*/
main(){
	var f = 0;
	var g = 1;

	if(~g > ~f){g}else{f} = 10;

	~g
}
===== Expected:
10

===== Output:

===== Error:


===== Failed test-while =====

===== Input:
/*
	Tests evaluation of nested while loops
*/
main(){
	var x = 0;
	var i = 0;

	while(~i < 10){
		var j = 0;
		while(~j < 10){
			j = ~j + 1;
			x = ~x + ~j
		};
		i = ~i + 1;
		x = ~x + ~i;
		~x
	}

}===== Expected:
605

===== Output:

===== Error:


